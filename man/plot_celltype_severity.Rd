% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_celltype_severity.R
\name{plot_celltype_severity}
\alias{plot_celltype_severity}
\title{Plot cell type severity}
\usage{
plot_celltype_severity(
  results,
  cl = get_cl(),
  q_threshold = 0.05,
  run_enrichment = TRUE,
  top_n = 3,
  types = c("dot", "bar")[1],
  run_prune_ancestors = FALSE,
  nonsig_fill = ggplot2::alpha("grey90", 0.001),
  force_new = FALSE,
  base_size = 8,
  save_path = tempfile(fileext = ".rds"),
  workers = 1
)
}
\arguments{
\item{results}{The cell type-phenotype enrichment results generated by
\link[MSTExplorer]{gen_results}
and merged together with \link[MSTExplorer]{merge_results}}

\item{cl}{Cell Ontology (CL) object from
\code{KGExplorer::get_ontology("cl")}.}

\item{q_threshold}{The q value threshold to subset the \code{results} by.}

\item{run_enrichment}{Instead of simply taking the top N results,
run a series of one-sided Wilcoxan rank-sum tests to determine whether the
distribution of ordinal severity values
(never=0, rarely=1, often=2, always=3) are significantly different between
a given cell type and all other cell types.
Tests are repeated across each GPT annotation separately using
\link[dplyr]{group_by} and \link[rstatix]{wilcox_test}.}

\item{top_n}{Top and bottom number of cell types to show per annotation
(used in dot plot only).}

\item{types}{Which types of plots of create.}

\item{run_prune_ancestors}{Prune redundant ancestral terms if any of their
descendants are present. Passes to \link[KGExplorer]{prune_ancestors}.}

\item{nonsig_fill}{Fill colour for non-significant results.}

\item{force_new}{Run a new set of enrichment tests even when cached
results are found. Only used when \code{run_enrichment=FALSE}.}

\item{base_size}{base font size, given in pts.}

\item{save_path}{Path to save results to.}

\item{workers}{Number (>1) or proportion (<1) of worker cores to use.}
}
\value{
Named list of ggplot and data.table objects.
}
\description{
Plot the phenotype severity scores (generated by GPT-4) aggregated by
the cell types each phenotype is significantly associated with.
}
\examples{
set.seed(2025)
results <- load_example_results()
results <- results[sample(seq(nrow(results)), 5000),]
out <- plot_celltype_severity(results, types=c("bar","dot"))
}
